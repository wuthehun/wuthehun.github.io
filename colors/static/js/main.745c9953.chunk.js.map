{"version":3,"sources":["components/BaseCard/BaseCard.tsx","components/Card/Card.tsx","components/CardContainer/CardContainer.tsx","components/CardPopup/CardPopup.tsx","components/Main.tsx","App.tsx","serviceWorker.js","index.js"],"names":["BaseCard","handleOnClick","alert","_this","props","color","react","style","this","onClick","filter","React","Card","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","formatColor","pColor","length","padStart","state","showPopup","popupColor","cardStyle","backgroundColor","width","height","display","margin","components_BaseCard_BaseCard","CardContainer","colorList","map","index","components_Card_Card","key","CardPopup","position","left","top","zIndex","opacity","Main","NUMBER_TO_DISPLAY","MAP_COLORS","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","tick","searchText","nColor","currentColor","list","getColorList","setState","hexColorList","pStartColor","startCol","i","findIndex","e","push","toString","handleColorIncrease","currentCol","handleColorDecrease","handleSearchTextOnBlur","target","value","searchHex","deciRegex","uncleanColor","toLowerCase","replace","test","parseInt","lastIndex","matches","exec","colorR","colorG","colorB","slice","undefined","handlePopupOnClick","handleCardOnClick","countDisplayed","setInterval","mainStyle","popup","components_CardPopup_CardPopup","incrementStyle","marginLeft","float","id","type","name","onBlur","components_CardContainer_CardContainer","App","react_default","a","createElement","className","src_components_Main","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.745c9953.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nexport interface BaseCardProps {\r\n\tcolor: string;\r\n\tstyle: React.CSSProperties;\r\n\tonClick: () => any;\r\n\tonBlur?: () => any;\r\n}\r\n\r\nclass BaseCard extends React.Component<BaseCardProps> {\r\n\thandleOnClick = () => {\r\n\t\talert(this.props.color);\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet textStyle = {\r\n\t\t\tfilter: \"invert(100%)\"\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div style={this.props.style} onClick={this.props.onClick}>\r\n\t\t\t\t<label style={textStyle}>{this.props.color}</label>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default BaseCard;\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport BaseCard from \"../BaseCard/BaseCard\";\r\n\r\nexport interface CardProps {\r\n\tcolor: string;\r\n\tonClick: (color: string) => any,\r\n}\r\n\r\nexport interface CardState {\r\n\tshowPopup: boolean;\r\n\tpopupColor: string;\r\n}\r\n\r\nclass Card extends React.Component<CardProps, CardState> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tshowPopup: false,\r\n\t\t\tpopupColor: \"000000\"\r\n\t\t};\r\n\t}\r\n\tformatColor = (pColor: string) => {\r\n\t\tif (pColor.length < 6) {\r\n\t\t\treturn pColor.padStart(6, \"0\");\r\n\t\t}\r\n\r\n\t\tif (pColor.length > 6) {\r\n\t\t\treturn \"000000\";\r\n\t\t}\r\n\r\n\t\treturn pColor;\r\n\t};\r\n\r\n\thandleOnClick = () => {\r\n\t\tlet color = this.props.color;\r\n\t\tthis.props.onClick(color);\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet cardStyle = {\r\n\t\t\tbackgroundColor: \"#\" + this.formatColor(this.props.color),\r\n\t\t\twidth: \"5rem\",\r\n\t\t\theight: \"2.3rem\",\r\n\t\t\tdisplay: \"inline-block\",\r\n\t\t\tmargin: \"1px\"\r\n\t\t};\r\n\r\n\t\tlet textStyle = {\r\n\t\t\tfilter: \"invert(100%)\"\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t\t<BaseCard\r\n\t\t\t\t\tstyle={cardStyle}\r\n\t\t\t\t\tcolor={this.props.color}\r\n\t\t\t\t\tonClick={this.handleOnClick}\r\n\t\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Card;\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport Card from \"../Card/Card\";\r\n\r\nexport interface CardContainerProps {\r\n\tcolorList: string[];\r\n\tonClick: (color: string) => any,\r\n}\r\n\r\nclass CardContainer extends React.Component<CardContainerProps> {\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.props.colorList.map((color: string, index:number) => {\r\n\t\t\t\t\treturn <Card color={color} onClick={this.props.onClick} key={index}/>;\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default CardContainer;\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport BaseCard from \"../BaseCard/BaseCard\";\r\n\r\nexport interface CardPopupProps {\r\n\tcolor: string;\r\n\tonClick: () => any;\r\n}\r\n\r\nclass CardPopup extends React.Component<CardPopupProps> {\r\n\tformatColor = (pColor: string) => {\r\n\t\tif (pColor.length < 6) {\r\n\t\t\treturn pColor.padStart(6, \"0\");\r\n\t\t}\r\n\r\n\t\tif (pColor.length > 6) {\r\n\t\t\treturn \"000000\";\r\n\t\t}\r\n\r\n\t\treturn pColor;\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet cardStyle: React.CSSProperties = {\r\n\t\t\tbackgroundColor: \"#\" + this.formatColor(this.props.color),\r\n\t\t\twidth: \"20%\",\r\n\t\t\theight: \"40%\",\r\n\t\t\tdisplay: \"float\",\r\n\t\t\tmargin: \"1px\",\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tleft: \"40%\",\r\n\t\t\ttop: \"30%\",\r\n\t\t\tzIndex: 1001,\r\n\t\t\topacity: 1\r\n\t\t};\r\n\r\n\t\tlet textStyle = {\r\n\t\t\tfilter: \"invert(100%)\"\r\n\t\t};\r\n\r\n\t\tlet cardBlockStyle: React.CSSProperties = {\r\n\t\t\tdisplay: \"float\",\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tleft: \"0\",\r\n\t\t\ttop: \"0\",\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"100%\",\r\n\t\t\tzIndex: 1000,\r\n\t\t\tbackgroundColor: 'black',\r\n\t\t\topacity: 0.5,\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div style={cardBlockStyle} onClick={this.props.onClick}/>\r\n\t\t\t\t<BaseCard\r\n\t\t\t\t\tstyle={cardStyle}\r\n\t\t\t\t\tonClick={this.props.onClick}\r\n\t\t\t\t\tcolor={this.props.color}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\nexport default CardPopup;\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport CardContainer from \"./CardContainer/CardContainer\";\r\nimport CardPopup from \"./CardPopup/CardPopup\";\r\nimport \"./Main.css\";\r\n\r\nexport interface MainState {\r\n\thexColorList: string[];\r\n\tcountDisplayed: number;\r\n\tcurrentColor: number;\r\n\tsearchText: string;\r\n\tshowPopup: boolean;\r\n\tpopupColor: string;\r\n}\r\n\r\nclass Main extends React.Component<any, MainState> {\r\n\tNUMBER_TO_DISPLAY = 256;\r\n\tMAP_COLORS: { [index: string]: string } = {\r\n\t\taliceblue: \"#f0f8ff\",\r\n\t\tantiquewhite: \"#faebd7\",\r\n\t\taqua: \"#00ffff\",\r\n\t\taquamarine: \"#7fffd4\",\r\n\t\tazure: \"#f0ffff\",\r\n\t\tbeige: \"#f5f5dc\",\r\n\t\tbisque: \"#ffe4c4\",\r\n\t\tblack: \"#000000\",\r\n\t\tblanchedalmond: \"#ffebcd\",\r\n\t\tblue: \"#0000ff\",\r\n\t\tblueviolet: \"#8a2be2\",\r\n\t\tbrown: \"#a52a2a\",\r\n\t\tburlywood: \"#deb887\",\r\n\t\tcadetblue: \"#5f9ea0\",\r\n\t\tchartreuse: \"#7fff00\",\r\n\t\tchocolate: \"#d2691e\",\r\n\t\tcoral: \"#ff7f50\",\r\n\t\tcornflowerblue: \"#6495ed\",\r\n\t\tcornsilk: \"#fff8dc\",\r\n\t\tcrimson: \"#dc143c\",\r\n\t\tcyan: \"#00ffff\",\r\n\t\tdarkblue: \"#00008b\",\r\n\t\tdarkcyan: \"#008b8b\",\r\n\t\tdarkgoldenrod: \"#b8860b\",\r\n\t\tdarkgray: \"#a9a9a9\",\r\n\t\tdarkgreen: \"#006400\",\r\n\t\tdarkkhaki: \"#bdb76b\",\r\n\t\tdarkmagenta: \"#8b008b\",\r\n\t\tdarkolivegreen: \"#556b2f\",\r\n\t\tdarkorange: \"#ff8c00\",\r\n\t\tdarkorchid: \"#9932cc\",\r\n\t\tdarkred: \"#8b0000\",\r\n\t\tdarksalmon: \"#e9967a\",\r\n\t\tdarkseagreen: \"#8fbc8f\",\r\n\t\tdarkslateblue: \"#483d8b\",\r\n\t\tdarkslategray: \"#2f4f4f\",\r\n\t\tdarkturquoise: \"#00ced1\",\r\n\t\tdarkviolet: \"#9400d3\",\r\n\t\tdeeppink: \"#ff1493\",\r\n\t\tdeepskyblue: \"#00bfff\",\r\n\t\tdimgray: \"#696969\",\r\n\t\tdodgerblue: \"#1e90ff\",\r\n\t\tfirebrick: \"#b22222\",\r\n\t\tfloralwhite: \"#fffaf0\",\r\n\t\tforestgreen: \"#228b22\",\r\n\t\tfuchsia: \"#ff00ff\",\r\n\t\tgainsboro: \"#dcdcdc\",\r\n\t\tghostwhite: \"#f8f8ff\",\r\n\t\tgold: \"#ffd700\",\r\n\t\tgoldenrod: \"#daa520\",\r\n\t\tgray: \"#808080\",\r\n\t\tgreen: \"#008000\",\r\n\t\tgreenyellow: \"#adff2f\",\r\n\t\thoneydew: \"#f0fff0\",\r\n\t\thotpink: \"#ff69b4\",\r\n\t\tindianred: \"#cd5c5c\",\r\n\t\tindigo: \"#4b0082\",\r\n\t\tivory: \"#fffff0\",\r\n\t\tkhaki: \"#f0e68c\",\r\n\t\tlavender: \"#e6e6fa\",\r\n\t\tlavenderblush: \"#fff0f5\",\r\n\t\tlawngreen: \"#7cfc00\",\r\n\t\tlemonchiffon: \"#fffacd\",\r\n\t\tlightblue: \"#add8e6\",\r\n\t\tlightcoral: \"#f08080\",\r\n\t\tlightcyan: \"#e0ffff\",\r\n\t\tlightgoldenrodyellow: \"#fafad2\",\r\n\t\tlightgrey: \"#d3d3d3\",\r\n\t\tlightgreen: \"#90ee90\",\r\n\t\tlightpink: \"#ffb6c1\",\r\n\t\tlightsalmon: \"#ffa07a\",\r\n\t\tlightseagreen: \"#20b2aa\",\r\n\t\tlightskyblue: \"#87cefa\",\r\n\t\tlightslategray: \"#778899\",\r\n\t\tlightsteelblue: \"#b0c4de\",\r\n\t\tlightyellow: \"#ffffe0\",\r\n\t\tlime: \"#00ff00\",\r\n\t\tlimegreen: \"#32cd32\",\r\n\t\tlinen: \"#faf0e6\",\r\n\t\tmagenta: \"#ff00ff\",\r\n\t\tmaroon: \"#800000\",\r\n\t\tmediumaquamarine: \"#66cdaa\",\r\n\t\tmediumblue: \"#0000cd\",\r\n\t\tmediumorchid: \"#ba55d3\",\r\n\t\tmediumpurple: \"#9370d8\",\r\n\t\tmediumseagreen: \"#3cb371\",\r\n\t\tmediumslateblue: \"#7b68ee\",\r\n\t\tmediumspringgreen: \"#00fa9a\",\r\n\t\tmediumturquoise: \"#48d1cc\",\r\n\t\tmediumvioletred: \"#c71585\",\r\n\t\tmidnightblue: \"#191970\",\r\n\t\tmintcream: \"#f5fffa\",\r\n\t\tmistyrose: \"#ffe4e1\",\r\n\t\tmoccasin: \"#ffe4b5\",\r\n\t\tnavajowhite: \"#ffdead\",\r\n\t\tnavy: \"#000080\",\r\n\t\toldlace: \"#fdf5e6\",\r\n\t\tolive: \"#808000\",\r\n\t\tolivedrab: \"#6b8e23\",\r\n\t\torange: \"#ffa500\",\r\n\t\torangered: \"#ff4500\",\r\n\t\torchid: \"#da70d6\",\r\n\t\tpalegoldenrod: \"#eee8aa\",\r\n\t\tpalegreen: \"#98fb98\",\r\n\t\tpaleturquoise: \"#afeeee\",\r\n\t\tpalevioletred: \"#d87093\",\r\n\t\tpapayawhip: \"#ffefd5\",\r\n\t\tpeachpuff: \"#ffdab9\",\r\n\t\tperu: \"#cd853f\",\r\n\t\tpink: \"#ffc0cb\",\r\n\t\tplum: \"#dda0dd\",\r\n\t\tpowderblue: \"#b0e0e6\",\r\n\t\tpurple: \"#800080\",\r\n\t\trebeccapurple: \"#663399\",\r\n\t\tred: \"#ff0000\",\r\n\t\trosybrown: \"#bc8f8f\",\r\n\t\troyalblue: \"#4169e1\",\r\n\t\tsaddlebrown: \"#8b4513\",\r\n\t\tsalmon: \"#fa8072\",\r\n\t\tsandybrown: \"#f4a460\",\r\n\t\tseagreen: \"#2e8b57\",\r\n\t\tseashell: \"#fff5ee\",\r\n\t\tsienna: \"#a0522d\",\r\n\t\tsilver: \"#c0c0c0\",\r\n\t\tskyblue: \"#87ceeb\",\r\n\t\tslateblue: \"#6a5acd\",\r\n\t\tslategray: \"#708090\",\r\n\t\tsnow: \"#fffafa\",\r\n\t\tspringgreen: \"#00ff7f\",\r\n\t\tsteelblue: \"#4682b4\",\r\n\t\ttan: \"#d2b48c\",\r\n\t\tteal: \"#008080\",\r\n\t\tthistle: \"#d8bfd8\",\r\n\t\ttomato: \"#ff6347\",\r\n\t\tturquoise: \"#40e0d0\",\r\n\t\tviolet: \"#ee82ee\",\r\n\t\twheat: \"#f5deb3\",\r\n\t\twhite: \"#ffffff\",\r\n\t\twhitesmoke: \"#f5f5f5\",\r\n\t\tyellow: \"#ffff00\",\r\n\t\tyellowgreen: \"#9acd32\"\r\n\t};\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\r\n\t\tlet list = this.getColorList(0x000000);\r\n\r\n\t\tthis.state = {\r\n\t\t\thexColorList: list,\r\n\t\t\tcurrentColor: 0x000000 + this.NUMBER_TO_DISPLAY,\r\n\t\t\tcountDisplayed: this.NUMBER_TO_DISPLAY,\r\n\t\t\tsearchText: \"\",\r\n\t\t\tshowPopup: false,\r\n\t\t\tpopupColor: \"000000\"\r\n\t\t};\r\n\t}\r\n\r\n\ttick = () => {\r\n\t\tif (this.state.searchText !== \"\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet nColor = this.state.currentColor + this.NUMBER_TO_DISPLAY;\r\n\r\n\t\tlet list = this.getColorList(nColor);\r\n\t\tif (this.state.currentColor + this.NUMBER_TO_DISPLAY > 0xffffff) {\r\n\t\t\tnColor = 0x000000;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\thexColorList: list,\r\n\t\t\tcurrentColor: nColor\r\n\t\t});\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tsetInterval(this.tick, 250);\r\n\t}\r\n\r\n\tgetColorList = (pStartColor: number) => {\r\n\t\tlet list = [];\r\n\t\tlet startCol = pStartColor;\r\n\r\n\t\tif (startCol < 0 || startCol > 0xffffff) {\r\n\t\t\tstartCol = 0x000000;\r\n\t\t}\r\n\r\n\t\tvar i = 0;\r\n\t\tfor (i = 0; i < this.NUMBER_TO_DISPLAY; i++) {\r\n\t\t\tif (\r\n\t\t\t\tstartCol + i < 0xffffff &&\r\n\t\t\t\tlist.findIndex((e: string) => {\r\n\t\t\t\t\treturn e === \"FFFFFF\";\r\n\t\t\t\t}) === -1\r\n\t\t\t) {\r\n\t\t\t\tlist.push((startCol + i).toString(16));\r\n\t\t\t}\r\n\t\t\tif (startCol + i === 0xffffff) {\r\n\t\t\t\tlist.push((startCol + i).toString(16));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn list;\r\n\t};\r\n\r\n\thandleColorIncrease = () => {\r\n\t\tlet currentCol = this.state.currentColor;\r\n\t\tcurrentCol = currentCol + 0x100000;\r\n\r\n\t\tif (currentCol > 0xffffff) {\r\n\t\t\tcurrentCol = 0;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tcurrentColor: currentCol\r\n\t\t});\r\n\t};\r\n\r\n\thandleColorDecrease = () => {\r\n\t\tlet currentCol = this.state.currentColor;\r\n\t\tcurrentCol = currentCol - 0x100000;\r\n\r\n\t\tif (currentCol < 0) {\r\n\t\t\tcurrentCol = 0;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tcurrentColor: currentCol\r\n\t\t});\r\n\t};\r\n\r\n\thandleSearchTextOnBlur = (e: any) => {\r\n\t\tif (e.target.value === \"\") {\r\n\t\t\tthis.setState({ searchText: \"\", currentColor: 0x000000 });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet searchHex = 0;\r\n\t\tlet hexRegex = /^[0-9A-Fa-f]{6}$/g;\r\n\t\tlet deciRegex = /^([0-9]{1,3})\\s*[,]\\s*([0-9]{1,3})\\s*[,]\\s*([0-9]{1,3})$/g;\r\n\r\n\t\tlet uncleanColor = e.target.value\r\n\t\t\t.toLowerCase()\r\n\t\t\t.replace(\"0x\", \"\")\r\n\t\t\t.replace(\"#\", \"\");\r\n\r\n\t\tif (hexRegex.test(uncleanColor)) {\r\n\t\t\tuncleanColor = \"0x\" + uncleanColor;\r\n\t\t\tsearchHex = parseInt(e.target.value, 16);\r\n\t\t} else if (deciRegex.test(uncleanColor)) {\r\n\t\t\tdeciRegex.lastIndex = 0;\r\n\t\t\tlet matches = deciRegex.exec(uncleanColor);\r\n\t\t\tif (\r\n\t\t\t\tmatches !== null &&\r\n\t\t\t\tmatches.length > 3 &&\r\n\t\t\t\tparseInt(matches[1]) <= 255 &&\r\n\t\t\t\tparseInt(matches[2]) <= 255 &&\r\n\t\t\t\tparseInt(matches[3]) <= 255\r\n\t\t\t) {\r\n\t\t\t\tlet colorR: string = \"0\" + parseInt(matches[1]).toString(16);\r\n\t\t\t\tlet colorG: string = \"0\" + parseInt(matches[2]).toString(16);\r\n\t\t\t\tlet colorB: string = \"0\" + parseInt(matches[3]).toString(16);\r\n\r\n\t\t\t\tsearchHex = parseInt(\r\n\t\t\t\t\t\"0x\" + colorR.slice(-2) + colorG.slice(-2) + colorB.slice(-2)\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tsearchHex = 0;\r\n\t\t\t}\r\n\t\t} else if (this.MAP_COLORS[uncleanColor.toLowerCase()] !== undefined) {\r\n\t\t\tsearchHex = parseInt(\r\n\t\t\t\t\"0x\" + this.MAP_COLORS[uncleanColor.toLowerCase()].replace(\"#\", \"\"),\r\n\t\t\t\t16\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tlet list = this.getColorList(searchHex);\r\n\r\n\t\tthis.setState({\r\n\t\t\thexColorList: list,\r\n\t\t\tsearchText: e.target.value,\r\n\t\t\tcurrentColor: searchHex\r\n\t\t});\r\n\t};\r\n\r\n\thandlePopupOnClick = () => {\r\n\t\tthis.setState({ showPopup: false });\r\n\t};\r\n\r\n\thandleCardOnClick = (color: string) => {\r\n\t\tthis.setState({\r\n\t\t\tpopupColor: color,\r\n\t\t\tshowPopup: true\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet popup = <></>;\r\n\t\tif (this.state.showPopup) {\r\n\t\t\tpopup = (\r\n\t\t\t\t<CardPopup\r\n\t\t\t\t\tcolor={this.state.popupColor}\r\n\t\t\t\t\tonClick={this.handlePopupOnClick}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tlet mainStyle: React.CSSProperties;\r\n\t\tif (this.state.showPopup) {\r\n\t\t\tmainStyle = {\r\n\t\t\t\tfilter: \"blur(2px)\"\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tmainStyle = {};\r\n\t\t}\r\n\r\n\t\tlet actionStyle: React.CSSProperties = {\r\n\t\t\tdisplay: \"float\"\r\n\t\t};\r\n\r\n\t\tlet incrementStyle: React.CSSProperties = {\r\n\t\t\tmarginLeft: \"5px\",\r\n\t\t\tfloat: \"right\",\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div style={mainStyle}>\r\n\t\t\t\t\t<header>\r\n\t\t\t\t\t\t<h1 id=\"hdTitle\">COLOR CARDS</h1>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tSEARCH&nbsp;\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"colorField\"\r\n\t\t\t\t\t\t\t\tonBlur={this.handleSearchTextOnBlur}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<button style={incrementStyle} onClick={this.handleColorDecrease}>-</button>\r\n\t\t\t\t\t\t\t<button style={incrementStyle} onClick={this.handleColorIncrease}>+</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</header>\r\n\t\t\t\t\t<CardContainer\r\n\t\t\t\t\t\tcolorList={this.state.hexColorList}\r\n\t\t\t\t\t\tonClick={this.handleCardOnClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{popup}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Main;\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Main from './components/Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}